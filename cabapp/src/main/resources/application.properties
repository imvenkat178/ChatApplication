# ============================================
# CAB BOOKING SYSTEM - APPLICATION PROPERTIES
# Location: Atlanta, Georgia, USA
# ============================================

# ============================================
# SERVER CONFIGURATION
# ============================================
server.port=8080
server.servlet.context-path=/api/v1
server.servlet.encoding.charset=UTF-8
server.servlet.encoding.enabled=true

# ============================================
# DATABASE CONFIGURATION (PostgreSQL)
# ============================================
spring.datasource.url=jdbc:postgresql://localhost:5432/cab_booking_db
spring.datasource.username=postgres
spring.datasource.password=your_password_here
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA/Hibernate Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

# ============================================
# KAFKA CONFIGURATION (for real-time messaging)
# ============================================
# Enable Kafka now that it's installed
app.kafka.enabled=false

spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=cab-booking-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

# ============================================
# REDIS CONFIGURATION (for location tracking)
# ============================================
spring.data.redis.host=localhost
spring.data.redis.port=6379
spring.data.redis.password=
spring.data.redis.timeout=2000ms
spring.data.redis.database=0

# Redis Connection Pool
spring.data.redis.lettuce.pool.max-active=8
spring.data.redis.lettuce.pool.max-wait=-1ms
spring.data.redis.lettuce.pool.max-idle=8
spring.data.redis.lettuce.pool.min-idle=0

# ============================================
# ATLANTA SERVICE AREA CONFIGURATION
# ============================================
# Atlanta City Center Coordinates
app.location.atlanta.center.latitude=33.7490
app.location.atlanta.center.longitude=-84.3880

# Atlanta Service Area Boundaries
app.location.atlanta.bounds.north=34.1
app.location.atlanta.bounds.south=33.4
app.location.atlanta.bounds.east=-84.0
app.location.atlanta.bounds.west=-84.8

# Service Area Settings
app.location.service.radius.km=50
app.location.service.city=Atlanta
app.location.service.state=Georgia
app.location.service.country=USA
app.location.service.timezone=America/New_York

# ============================================
# GEOCODING SERVICE CONFIGURATION
# ============================================
# OpenStreetMap Nominatim (Free - No API Key Required)
app.geocoding.provider=openstreetmap
app.geocoding.base.url=https://nominatim.openstreetmap.org
app.geocoding.rate.limit.ms=1000
app.geocoding.timeout.ms=5000
app.geocoding.retries=3

# Default coordinates for fallback
app.geocoding.default.latitude=33.7490
app.geocoding.default.longitude=-84.3880

# ============================================
# DISTANCE CALCULATION
# ============================================
app.distance.unit=km
app.distance.algorithm=haversine
app.distance.precision=2

# ============================================
# PRICING CONFIGURATION
# ============================================
# Base rates (per km) for different vehicle types
app.pricing.hatchback.base.rate=10.0
app.pricing.sedan.base.rate=12.0
app.pricing.suv.base.rate=15.0
app.pricing.mini.base.rate=8.0
app.pricing.premium.base.rate=20.0
app.pricing.luxury.base.rate=30.0
app.pricing.auto.base.rate=5.0
app.pricing.bike.base.rate=3.0

# Additional charges
app.pricing.base.fare=25.0
app.pricing.booking.fee=10.0
app.pricing.surge.multiplier=1.0
app.pricing.night.surcharge=1.2
app.pricing.currency=USD

# ============================================
# WEBSOCKET CONFIGURATION (Real-time tracking)
# ============================================
spring.websocket.enabled=true
app.websocket.endpoint=/ws
app.websocket.allowed.origins=http://localhost:3000,http://localhost:8080
app.websocket.heartbeat.interval=30000

# ============================================
# SECURITY CONFIGURATION
# ============================================
# JWT Configuration
app.security.jwt.secret=mySecretKey123456789CabBookingAtlanta2024
app.security.jwt.expiration=86400000
app.security.jwt.refresh.expiration=604800000

# Password encoding
spring.security.password.strength=10

# CORS Configuration
app.cors.allowed.origins=http://localhost:3000,http://localhost:8080
app.cors.allowed.methods=GET,POST,PUT,DELETE,OPTIONS
app.cors.allowed.headers=*
app.cors.allow.credentials=true

# ============================================
# LOGGING CONFIGURATION
# ============================================
logging.level.com.cabapp=DEBUG
logging.level.com.cabapp.service.LocationService=TRACE
logging.level.com.cabapp.service.GeocodingService=DEBUG
logging.level.com.cabapp.controller.LocationController=DEBUG
logging.level.org.springframework.web=INFO
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# Log file configuration
logging.file.name=logs/cab-booking-app.log
logging.file.max-size=10MB
logging.file.max-history=30

# ============================================
# VALIDATION CONFIGURATION
# ============================================
app.validation.coordinates.precision=6
app.validation.address.min.length=5
app.validation.address.max.length=255
app.validation.phone.pattern=^[+]?[1-9]\\d{1,14}$

# ============================================
# LOCATION TRACKING CONFIGURATION
# ============================================
app.location.tracking.update.interval=5000
app.location.tracking.accuracy.threshold=50
app.location.tracking.max.distance.jump=1000
app.location.tracking.expire.time=300

# Driver location updates
app.driver.location.update.interval=3000
app.driver.location.redis.key.prefix=driver:location:
app.driver.location.expire.seconds=60

# ============================================
# RIDE MATCHING CONFIGURATION
# ============================================
app.ride.matching.radius.km=5
app.ride.matching.max.drivers=10
app.ride.matching.timeout.seconds=30
app.ride.matching.refresh.interval=2000

# ============================================
# NOTIFICATION CONFIGURATION
# ============================================
app.notification.sms.enabled=false
app.notification.email.enabled=true
app.notification.push.enabled=true

# Email configuration (if enabled)
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=your_email@gmail.com
spring.mail.password=your_app_password
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# ============================================
# BEAN CONFIGURATION
# ============================================
# Fix for duplicate passwordEncoder bean
spring.main.allow-bean-definition-overriding=false

# ============================================
# ACTUATOR CONFIGURATION (Health checks)
# ============================================
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=when-authorized
management.info.env.enabled=true

# Custom health indicators
management.health.redis.enabled=true
management.health.db.enabled=true
management.health.custom.location-service.enabled=true

# ============================================
# DEVELOPMENT/TESTING CONFIGURATION
# ============================================
# Test profiles
spring.profiles.active=development

# ============================================
# CACHE CONFIGURATION
# ============================================
spring.cache.type=redis
spring.cache.redis.time-to-live=600000
spring.cache.cache-names=locations,geocoding,drivers,rides

# ============================================
# APPLICATION INFO
# ============================================
info.app.name=Cab Booking System
info.app.description=Real-time cab booking application for Atlanta, Georgia
info.app.version=1.0.0
info.app.location=Atlanta, Georgia, USA
info.app.timezone=America/New_York

# ============================================
# ERROR HANDLING
# ============================================
server.error.include-message=always
server.error.include-binding-errors=always
server.error.include-stacktrace=on-param
server.error.include-exception=false